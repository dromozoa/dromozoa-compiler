local execute = (function ()
local tonumber = tonumber
local concat = table.concat

local string_char = string.char
local string_byte = string.byte
local string_find = string.find
local string_sub = string.sub

local encode_utf8
local decode_surrogate_pair

local utf8 = utf8
if utf8 then
  encode_utf8 = utf8.char
else
  local result, module = pcall(require, "dromozoa.utf8.encode")
  if result then
    encode_utf8 = module
  end
end
if not encode_utf8 then
  encode_utf8 = function (a)
    if a <= 0x7F then
      return string_char(a)
    elseif a <= 0x07FF then
      local b = a % 0x40
      local a = (a - b) / 0x40
      return string_char(a + 0xC0, b + 0x80)
    elseif a <= 0xFFFF then
      local c = a % 0x40
      local a = (a - c) / 0x40
      local b = a % 0x40
      local a = (a - b) / 0x40
      return string_char(a + 0xE0, b + 0x80, c + 0x80)
    else
      local d = a % 0x40
      local a = (a - d) / 0x40
      local c = a % 0x40
      local a = (a - c) / 0x40
      local b = a % 0x40
      local a = (a - b) / 0x40
      return string_char(a + 0xF0, b + 0x80, c + 0x80, d + 0x80)
    end
  end
end

local result, module = pcall(require, "dromozoa.utf16.decode_surrogate_pair")
if result then
  decode_surrogate_pair = module
else
  decode_surrogate_pair = function (a, b)
    return (a - 0xD800) * 0x0400 + (b - 0xDC00) + 0x010000
  end
end

local function range(ri, rj, i, j)
  if i > 0 then
    i = i + ri - 1
  else
    i = i + rj + 1
  end
  if j > 0 then
    j = j + ri - 1
  else
    j = j + rj + 1
  end
  return i, j
end

return function (self, s)
  local init = 1
  local n = #s
  local terminal_nodes = {}

  local stack = { 1 } -- start lexer
  local position_start = init
  local position_mark
  local buffer = {}

  while init <= n do
    local lexer = self[stack[#stack]]
    local automaton = lexer.automaton
    local position
    local accept

    if automaton then -- regexp_lexer
      local transitions = automaton.transitions
      local state = automaton.start_state

      for i = init + 3, n, 4 do
        local a, b, c, d = string_byte(s, i - 3, i)
        local state1 = transitions[a][state]
        if not state1 then
          position = i - 3
          break
        else
          local state2 = transitions[b][state1]
          if not state2 then
            state = state1
            position = i - 2
            break
          else
            local state3 = transitions[c][state2]
            if not state3 then
              state = state2
              position = i - 1
              break
            else
              local state4 = transitions[d][state3]
              if not state4 then
                state = state3
                position = i
                break
              else
                state = state4
              end
            end
          end
        end
      end

      if not position then
        position = n + 1
        local m = position - (position - init) % 4
        if m < position then
          local a, b, c = string_byte(s, m, n)
          if c then
            local state1 = transitions[a][state]
            if not state1 then
              position = m
            else
              local state2 = transitions[b][state1]
              if not state2 then
                state = state1
                position = m + 1
              else
                local state3 = transitions[c][state2]
                if not state3 then
                  state = state2
                  position = n
                else
                  state = state3
                end
              end
            end
          elseif b then
            local state1 = transitions[a][state]
            if not state1 then
              position = m
            else
              local state2 = transitions[b][state1]
              if not state2 then
                state = state1
                position = m + 1
              else
                state = state2
              end
            end
          else
            local state1 = transitions[a][state]
            if not state1 then
              position = m
            else
              state = state1
            end
          end
        end
      end

      accept = automaton.accept_states[state]
      if not accept then
        return nil, "lexer error", init
      end
    else -- search lexer
      local i, j = string_find(s, self.hold, init, true)
      if not i then
        return nil, "lexer error", init
      end
      if init == i then
        position = j + 1
        accept = 1
      else
        position = i
        accept = 2
      end
    end

    local skip
    local rs = s
    local ri = init
    local rj = position - 1
    local rv

    local actions = lexer.accept_to_actions[accept]
    for i = 1, #actions do
      local action = actions[i]
      local code = action[1]
      if code == 1 then -- skip
        skip = true
      elseif code == 2 then -- push
        buffer[#buffer + 1] = string_sub(rs, ri, rj)
        skip = true
      elseif code == 3 then -- concat
        rs = concat(buffer)
        ri = 1
        rj = #rs
        for j = 1, #buffer do
          buffer[j] = nil
        end
      elseif code == 4 then -- call
        stack[#stack + 1] = action[2]
      elseif code == 5 then -- return
        stack[#stack] = nil
      elseif code == 6 then -- substitute
        rs = action[2]
        ri = 1
        rj = #rs
      elseif code == 7 then -- hold
        self.hold = string_sub(rs, ri, rj)
      elseif code == 8 then -- mark
        position_mark = init
      elseif code == 9 then -- substring
        ri, rj = range(ri, rj, action[2], action[3])
      elseif code == 10 then -- convert to integer
        rv = tonumber(string_sub(rs, ri, rj), action[2])
      elseif code == 11 then -- convert to char
        rs = string_char(rv)
        ri = 1
        rj = #rs
      elseif code == 12 then -- join
        rs = action[2] .. string_sub(rs, ri, rj) .. action[3]
        ri = 1
        rj = #rs
      elseif code == 13 then -- encode utf8
        rs = encode_utf8(tonumber(string_sub(rs, range(ri, rj, action[2], action[3])), 16))
        ri = 1
        rj = #rs
      elseif code == 14 then -- encode utf8 (surrogate pair)
        local code1 = tonumber(string_sub(rs, range(ri, rj, action[2], action[3])), 16)
        local code2 = tonumber(string_sub(rs, range(ri, rj, action[4], action[5])), 16)
        rs = encode_utf8(decode_surrogate_pair(code1, code2))
        ri = 1
        rj = #rs
      elseif code == 15 then -- add integer
        rv = rv + action[2]
      end
    end

    if not skip then
      if not position_mark then
        position_mark = init
      end
      local node = {
        [0] = lexer.accept_to_symbol[accept];
        p = position_start;
        i = position_mark;
        j = position - 1;
        rs = rs;
        ri = ri;
        rj = rj;
      }
      terminal_nodes[#terminal_nodes + 1] = node
      position_start = position
      position_mark = nil
    end
    init = position
  end

  if #stack == 1 then
    if not position_mark then
      position_mark = init
    end
    terminal_nodes[#terminal_nodes + 1] = {
      [0] = 1; -- marker end
      p = position_start;
      i = position_mark;
      j = n;
      rs = s;
      ri = init;
      rj = n;
    }
    return terminal_nodes
  else
    return nil, "lexer error", init
  end
end
end)()
local metatable = { __call = execute }
local _ = {}
_[1] = {1}
_[2] = {_[1]}
_[3] = {}
_[4] = {9,4,-3}
_[5] = {_[4]}
_[6] = {9,3,-3}
_[7] = {_[6]}
_[8] = {4,2}
_[9] = {8}
_[10] = {_[1],_[8],_[9]}
_[11] = {4,3}
_[12] = {_[1],_[11],_[9]}
_[13] = {9,2,-3}
_[14] = {12,"]","]"}
_[15] = {7}
_[16] = {4,4}
_[17] = {_[13],_[14],_[15],_[1],_[16],_[9]}
_[18] = {9,2,-2}
_[19] = {_[18],_[14],_[15],_[1],_[16],_[9]}
_[20] = {9,4,-2}
_[21] = {4,5}
_[22] = {_[20],_[14],_[15],_[1],_[21]}
_[23] = {_[2],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[5],_[7],_[10],_[12],_[17],_[19],_[3],_[3],_[3],_[3],_[2],_[22],_[2]}
_[24] = {nil,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,58,nil,nil,nil,nil,59,59,60,60}
_[25] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,58,58,59,59,60,61,62,62,63,63,64,64,65,66,66,67,67,68,68,69,70}
_[26] = {[121]=142,[123]=141,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[27] = {[1]=1,[121]=142,[123]=141,[135]=1,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[28] = {[1]=1,[121]=142,[122]=120,[123]=121,[135]=1,[136]=134,[137]=134,[138]=134,[139]=134,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[29] = {[121]=142,[123]=141,[135]=118,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[30] = {[121]=142,[123]=141,[135]=30,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[31] = {[121]=142,[123]=141,[135]=28,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[32] = {[121]=142,[123]=141,[135]=31,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[33] = {[121]=142,[123]=141,[135]=119,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[34] = {[121]=142,[123]=141,[135]=44,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[35] = {[121]=142,[123]=141,[135]=45,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[36] = {[121]=142,[123]=141,[135]=26,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[37] = {[121]=142,[123]=141,[135]=24,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[144]=145,[148]=149,[151]=141,[152]=142}
_[38] = {[121]=142,[123]=141,[135]=53,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[39] = {[25]=136,[121]=142,[123]=141,[135]=25,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[144]=145,[148]=149,[151]=141,[152]=142}
_[40] = {[54]=55,[55]=56,[121]=142,[123]=141,[124]=127,[125]=127,[126]=129,[135]=54,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[146]=147,[151]=141,[152]=142}
_[41] = {[27]=36,[121]=142,[123]=141,[135]=27,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[42] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,127,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,125,125,126,127,128,129,130,nil,nil,nil,nil,124,137,137,137,137,140,141,142,140,128,128,126,129,130,130,nil,141,142}
_[43] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,127,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,125,125,126,127,128,129,130,nil,nil,nil,nil,125,137,137,137,137,140,141,142,140,128,128,126,129,130,130,nil,141,142}
_[44] = {[52]=50,[121]=142,[123]=141,[135]=52,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[45] = {[121]=142,[123]=141,[135]=51,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[46] = {[41]=34,[121]=142,[123]=141,[135]=41,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[47] = {[32]=38,[41]=39,[42]=40,[43]=37,[48]=150,[121]=142,[123]=141,[135]=43,[136]=137,[137]=137,[138]=139,[139]=139,[140]=140,[141]=141,[142]=142,[143]=140,[150]=150,[151]=141,[152]=142}
_[48] = {[42]=35,[121]=142,[123]=141,[135]=42,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[49] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,126,nil,nil,129,nil,nil,nil,nil,nil,57,137,137,137,137,140,141,142,140,nil,nil,126,129,nil,nil,nil,141,142}
_[50] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,144,144,126,144,nil,129,nil,nil,nil,nil,nil,57,137,137,137,137,140,141,142,140,nil,nil,126,129,nil,nil,nil,141,142}
_[51] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,137,137,137,137,140,141,142,140,nil,nil,nil,nil,nil,nil,nil,141,142}
_[52] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,148,nil,nil,148,nil,nil,nil,nil,nil,57,137,137,137,137,140,141,142,140,nil,nil,nil,nil,nil,nil,nil,141,142}
_[53] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,146,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,137,137,137,137,140,141,142,140,nil,nil,nil,nil,nil,nil,nil,141,142}
_[54] = {[48]=123,[121]=142,[123]=141,[135]=48,[136]=138,[137]=137,[138]=140,[139]=133,[140]=140,[141]=141,[142]=142,[143]=140,[150]=122,[151]=141,[152]=142}
_[55] = {[114]=115,[116]=117,[121]=152,[123]=151,[131]=132,[135]=49,[136]=137,[137]=137,[138]=137,[139]=137,[140]=143,[141]=151,[142]=152,[143]=131,[151]=116,[152]=114}
_[56] = {[121]=142,[123]=141,[135]=29,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[57] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,94,57,57,68,57,57,57,104,57,108,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,126,nil,nil,129,nil,nil,nil,nil,nil,77,137,137,137,137,140,141,142,140,nil,nil,126,129,nil,nil,nil,141,142}
_[58] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,126,nil,nil,129,nil,nil,nil,nil,nil,61,137,137,137,137,140,141,142,140,nil,nil,126,129,nil,nil,nil,141,142}
_[59] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,62,57,57,57,57,57,57,57,57,57,57,57,85,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,126,nil,nil,129,nil,nil,nil,nil,nil,57,137,137,137,137,140,141,142,140,nil,nil,126,129,nil,nil,nil,141,142}
_[60] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,2,57,57,57,57,7,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,126,nil,nil,129,nil,nil,nil,nil,nil,95,137,137,137,137,140,141,142,140,nil,nil,126,129,nil,nil,nil,141,142}
_[61] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,64,57,57,57,57,57,57,78,57,57,57,57,87,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,110,57,57,57,57,57,57,5,57,57,8,57,57,57,57,57,57,57,57,57,57,57,21,57,23,nil,nil,nil,nil,nil,nil,nil,142,nil,141,144,144,126,144,nil,129,nil,nil,nil,nil,nil,79,137,137,137,137,140,141,142,140,nil,nil,126,129,nil,nil,nil,141,142}
_[62] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,6,57,57,57,57,57,12,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,126,nil,nil,129,nil,nil,nil,nil,nil,81,137,137,137,137,140,141,142,140,nil,nil,126,129,nil,nil,nil,141,142}
_[63] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,70,137,137,137,137,140,141,142,140,nil,nil,nil,nil,nil,nil,nil,141,142}
_[64] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,76,57,57,57,57,57,57,57,89,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,137,137,137,137,140,141,142,140,nil,nil,nil,nil,nil,nil,nil,141,142}
_[65] = {nil,57,57,57,97,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,83,57,57,57,57,57,57,92,57,57,57,57,57,57,57,57,57,105,57,57,57,57,112,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,103,137,137,137,137,140,141,142,140,nil,nil,nil,nil,nil,nil,nil,141,142}
_[66] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,3,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,137,137,137,137,140,141,142,140,nil,nil,nil,nil,nil,nil,nil,141,142}
_[67] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,82,57,57,57,57,57,57,57,57,57,57,80,57,57,57,57,57,57,57,57,57,57,57,57,113,57,57,57,57,57,57,57,57,57,57,57,14,15,57,57,57,57,57,57,22,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,63,137,137,137,137,140,141,142,140,nil,nil,nil,nil,nil,nil,nil,141,142}
_[68] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,59,57,57,57,57,57,57,75,57,57,57,57,57,57,57,57,57,57,57,93,57,98,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,10,57,13,57,57,57,57,57,19,20,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,86,137,137,137,137,140,141,142,140,nil,nil,nil,nil,nil,nil,nil,141,142}
_[69] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,71,57,57,57,57,57,57,84,57,57,57,57,57,57,57,57,57,57,100,57,101,57,57,106,57,57,57,57,57,57,57,57,4,57,57,57,57,57,57,11,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,107,137,137,137,137,140,141,142,140,nil,nil,nil,nil,nil,nil,nil,141,142}
_[70] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,72,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,148,nil,nil,148,nil,nil,nil,nil,nil,57,137,137,137,137,140,141,142,140,nil,nil,nil,nil,nil,nil,nil,141,142}
_[71] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,67,57,57,57,57,57,57,57,57,57,57,57,57,90,57,57,57,57,57,57,57,57,57,57,57,57,57,109,57,57,57,57,57,57,57,57,57,57,57,9,57,57,57,57,57,57,17,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,60,137,137,137,137,140,141,142,140,nil,nil,nil,nil,nil,nil,nil,141,142}
_[72] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,96,57,99,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,137,137,137,137,140,141,142,140,nil,nil,nil,nil,nil,nil,nil,141,142}
_[73] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,69,57,73,57,57,57,57,57,57,57,57,57,57,91,57,57,57,57,57,57,57,57,102,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,16,57,18,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,74,137,137,137,137,140,141,142,140,nil,nil,nil,nil,nil,nil,nil,141,142}
_[74] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,88,57,57,57,57,57,57,57,58,57,57,57,57,57,57,57,57,111,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,65,137,137,137,137,140,141,142,140,nil,nil,nil,nil,nil,nil,nil,141,142}
_[75] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,142,nil,141,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,66,137,137,137,137,140,141,142,140,nil,nil,nil,nil,nil,nil,nil,141,142}
_[76] = {[121]=142,[123]=141,[135]=46,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[77] = {[121]=142,[123]=141,[135]=33,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[78] = {[121]=142,[123]=141,[135]=47,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[79] = {[121]=142,[123]=141,[135]=32,[136]=137,[137]=137,[138]=137,[139]=137,[140]=140,[141]=141,[142]=142,[143]=140,[151]=141,[152]=142}
_[80] = {_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[27],_[28],_[27],_[27],_[27],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[27],_[26],_[29],_[30],_[26],_[31],_[32],_[33],_[34],_[35],_[36],_[37],_[38],_[39],_[40],_[41],_[42],_[43],_[43],_[43],_[43],_[43],_[43],_[43],_[43],_[43],_[44],_[45],_[46],_[47],_[48],_[26],_[26],_[49],_[49],_[49],_[49],_[50],_[49],_[51],_[51],_[51],_[51],_[51],_[51],_[51],_[51],_[51],_[52],_[51],_[51],_[51],_[51],_[51],_[51],_[51],_[53],_[51],_[51],_[54],_[26],_[55],_[56],_[51],_[26],_[57],_[58],_[59],_[60],_[61],_[62],_[63],_[64],_[65],_[51],_[66],_[67],_[51],_[68],_[69],_[70],_[51],_[71],_[72],_[73],_[74],_[51],_[75],_[53],_[51],_[51],_[76],_[77],_[78],_[79],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],_[26],[0]=_[26]}
_[81] = {accept_states=_[25],max_state=152,start_state=135,transitions=_[80]}
_[82] = {accept_to_actions=_[23],accept_to_symbol=_[24],automaton=_[81]}
_[83] = {6,"\a"}
_[84] = {2}
_[85] = {_[83],_[84]}
_[86] = {6,"\b"}
_[87] = {_[86],_[84]}
_[88] = {6,"\f"}
_[89] = {_[88],_[84]}
_[90] = {6,"\n"}
_[91] = {_[90],_[84]}
_[92] = {6,"\r"}
_[93] = {_[92],_[84]}
_[94] = {6,"\t"}
_[95] = {_[94],_[84]}
_[96] = {6,"\v"}
_[97] = {_[96],_[84]}
_[98] = {6,"\\"}
_[99] = {_[98],_[84]}
_[100] = {6,"\""}
_[101] = {_[100],_[84]}
_[102] = {6,"'"}
_[103] = {_[102],_[84]}
_[104] = {9,2,-1}
_[105] = {10,10}
_[106] = {11}
_[107] = {_[104],_[105],_[106],_[84]}
_[108] = {9,3,-1}
_[109] = {10,16}
_[110] = {_[108],_[109],_[106],_[84]}
_[111] = {13,4,-2}
_[112] = {_[111],_[84]}
_[113] = {_[84]}
_[114] = {3}
_[115] = {5}
_[116] = {_[114],_[115]}
_[117] = {_[85],_[87],_[89],_[91],_[93],_[95],_[97],_[99],_[101],_[103],_[2],_[107],_[110],_[112],_[113],_[116]}
_[118] = {[16]=58}
_[119] = {1,2,3,4,5,6,7,8,9,10,11,12,12,12,13,14,15,16}
_[120] = {[17]=17,[19]=17}
_[121] = {[11]=11,[17]=17,[19]=17}
_[122] = {[19]=18,[20]=9}
_[123] = {[17]=17,[19]=17,[20]=10}
_[124] = {[12]=13,[13]=14,[17]=17,[19]=17,[20]=12,[22]=24,[23]=25,[24]=24,[25]=15}
_[125] = {[17]=17,[19]=17,[22]=24,[23]=25,[24]=24,[25]=15}
_[126] = {[19]=20,[20]=8}
_[127] = {[17]=17,[19]=17,[20]=1,[22]=24,[23]=25,[24]=24,[25]=15}
_[128] = {[17]=17,[19]=17,[20]=2,[22]=24,[23]=25,[24]=24,[25]=15}
_[129] = {[17]=17,[19]=17,[20]=3,[22]=24,[23]=25,[24]=24,[25]=15}
_[130] = {[17]=17,[19]=17,[20]=4}
_[131] = {[17]=17,[19]=17,[20]=5}
_[132] = {[17]=17,[19]=17,[20]=6}
_[133] = {[17]=17,[19]=17,[20]=21}
_[134] = {[17]=17,[19]=17,[20]=7}
_[135] = {[17]=17,[19]=17,[20]=23}
_[136] = {[17]=17,[19]=17,[20]=11}
_[137] = {[17]=17,[19]=17,[21]=22}
_[138] = {[17]=17,[19]=17,[24]=16}
_[139] = {_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[121],_[121],_[121],_[121],_[121],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[121],_[120],_[122],_[120],_[120],_[120],_[120],_[123],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[124],_[124],_[124],_[124],_[124],_[124],_[124],_[124],_[124],_[124],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[125],_[125],_[125],_[125],_[125],_[125],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[126],_[120],_[120],_[120],_[120],_[127],_[128],_[125],_[125],_[125],_[129],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[130],_[120],_[120],_[120],_[131],_[120],_[132],_[133],_[134],_[120],_[135],_[120],_[136],_[137],_[120],_[138],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],[0]=_[120]}
_[140] = {accept_states=_[119],max_state=25,start_state=19,transitions=_[139]}
_[141] = {accept_to_actions=_[117],accept_to_symbol=_[118],automaton=_[140]}
_[142] = {[17]=17,[19]=17,[20]=9}
_[143] = {[19]=18,[20]=10}
_[144] = {_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[121],_[121],_[121],_[121],_[121],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[121],_[120],_[142],_[120],_[120],_[120],_[120],_[143],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[124],_[124],_[124],_[124],_[124],_[124],_[124],_[124],_[124],_[124],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[125],_[125],_[125],_[125],_[125],_[125],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[126],_[120],_[120],_[120],_[120],_[127],_[128],_[125],_[125],_[125],_[129],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[130],_[120],_[120],_[120],_[131],_[120],_[132],_[133],_[134],_[120],_[135],_[120],_[136],_[137],_[120],_[138],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],_[120],[0]=_[120]}
_[145] = {accept_states=_[119],max_state=25,start_state=19,transitions=_[144]}
_[146] = {accept_to_actions=_[117],accept_to_symbol=_[118],automaton=_[145]}
_[147] = {_[116],_[113]}
_[148] = {58}
_[149] = {accept_to_actions=_[147],accept_to_symbol=_[148]}
_[150] = {_[1],_[115]}
_[151] = {_[150],_[2]}
_[152] = {accept_to_actions=_[151],accept_to_symbol=_[3]}
_[153] = {_[82],_[141],_[146],_[149],_[152]}
local root = setmetatable(_[153], metatable)
return function() return root end
