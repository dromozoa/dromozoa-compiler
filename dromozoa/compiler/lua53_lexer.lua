local execute = (function ()
local tonumber = tonumber
local concat = table.concat

local string_char = string.char
local string_byte = string.byte
local string_find = string.find
local string_sub = string.sub

local encode_utf8
local decode_surrogate_pair

local utf8 = utf8
if utf8 then
  encode_utf8 = utf8.char
else
  local result, module = pcall(require, "dromozoa.utf8.encode")
  if result then
    encode_utf8 = module
  end
end
if not encode_utf8 then
  encode_utf8 = function (a)
    if a <= 0x7F then
      return string_char(a)
    elseif a <= 0x07FF then
      local b = a % 0x40
      local a = (a - b) / 0x40
      return string_char(a + 0xC0, b + 0x80)
    elseif a <= 0xFFFF then
      local c = a % 0x40
      local a = (a - c) / 0x40
      local b = a % 0x40
      local a = (a - b) / 0x40
      return string_char(a + 0xE0, b + 0x80, c + 0x80)
    else
      local d = a % 0x40
      local a = (a - d) / 0x40
      local c = a % 0x40
      local a = (a - c) / 0x40
      local b = a % 0x40
      local a = (a - b) / 0x40
      return string_char(a + 0xF0, b + 0x80, c + 0x80, d + 0x80)
    end
  end
end

local result, module = pcall(require, "dromozoa.utf16.decode_surrogate_pair")
if result then
  decode_surrogate_pair = module
else
  decode_surrogate_pair = function (a, b)
    return (a - 0xD800) * 0x0400 + (b - 0xDC00) + 0x010000
  end
end

local function range(ri, rj, i, j)
  if i > 0 then
    i = i + ri - 1
  else
    i = i + rj + 1
  end
  if j > 0 then
    j = j + ri - 1
  else
    j = j + rj + 1
  end
  return i, j
end

return function (self, s)
  local init = 1
  local n = #s
  local terminal_nodes = {}

  local stack = { 1 } -- start lexer
  local position_start = init
  local position_mark
  local buffer = {}

  while init <= n do
    local lexer = self[stack[#stack]]
    local automaton = lexer.automaton
    local position
    local accept

    if automaton then -- regexp_lexer
      local transitions = automaton.transitions
      local state = automaton.start_state

      for i = init + 3, n, 4 do
        local a, b, c, d = string_byte(s, i - 3, i)
        local state1 = transitions[a][state]
        if not state1 then
          position = i - 3
          break
        else
          local state2 = transitions[b][state1]
          if not state2 then
            state = state1
            position = i - 2
            break
          else
            local state3 = transitions[c][state2]
            if not state3 then
              state = state2
              position = i - 1
              break
            else
              local state4 = transitions[d][state3]
              if not state4 then
                state = state3
                position = i
                break
              else
                state = state4
              end
            end
          end
        end
      end

      if not position then
        position = n + 1
        local m = position - (position - init) % 4
        if m < position then
          local a, b, c = string_byte(s, m, n)
          if c then
            local state1 = transitions[a][state]
            if not state1 then
              position = m
            else
              local state2 = transitions[b][state1]
              if not state2 then
                state = state1
                position = m + 1
              else
                local state3 = transitions[c][state2]
                if not state3 then
                  state = state2
                  position = n
                else
                  state = state3
                end
              end
            end
          elseif b then
            local state1 = transitions[a][state]
            if not state1 then
              position = m
            else
              local state2 = transitions[b][state1]
              if not state2 then
                state = state1
                position = m + 1
              else
                state = state2
              end
            end
          else
            local state1 = transitions[a][state]
            if not state1 then
              position = m
            else
              state = state1
            end
          end
        end
      end

      accept = automaton.accept_states[state]
      if not accept then
        return nil, "lexer error", init
      end
    else -- search lexer
      local i, j = string_find(s, self.hold, init, true)
      if not i then
        return nil, "lexer error", init
      end
      if init == i then
        position = j + 1
        accept = 1
      else
        position = i
        accept = 2
      end
    end

    local skip
    local rs = s
    local ri = init
    local rj = position - 1
    local rv

    local actions = lexer.accept_to_actions[accept]
    for i = 1, #actions do
      local action = actions[i]
      local code = action[1]
      if code == 1 then -- skip
        skip = true
      elseif code == 2 then -- push
        buffer[#buffer + 1] = string_sub(rs, ri, rj)
        skip = true
      elseif code == 3 then -- concat
        rs = concat(buffer)
        ri = 1
        rj = #rs
        for j = 1, #buffer do
          buffer[j] = nil
        end
      elseif code == 4 then -- call
        stack[#stack + 1] = action[2]
      elseif code == 5 then -- return
        stack[#stack] = nil
      elseif code == 6 then -- substitute
        rs = action[2]
        ri = 1
        rj = #rs
      elseif code == 7 then -- hold
        self.hold = string_sub(rs, ri, rj)
      elseif code == 8 then -- mark
        position_mark = init
      elseif code == 9 then -- substring
        ri, rj = range(ri, rj, action[2], action[3])
      elseif code == 10 then -- convert to integer
        rv = tonumber(string_sub(rs, ri, rj), action[2])
      elseif code == 11 then -- convert to char
        rs = string_char(rv)
        ri = 1
        rj = #rs
      elseif code == 12 then -- join
        rs = action[2] .. string_sub(rs, ri, rj) .. action[3]
        ri = 1
        rj = #rs
      elseif code == 13 then -- encode utf8
        rs = encode_utf8(tonumber(string_sub(rs, range(ri, rj, action[2], action[3])), 16))
        ri = 1
        rj = #rs
      elseif code == 14 then -- encode utf8 (surrogate pair)
        local code1 = tonumber(string_sub(rs, range(ri, rj, action[2], action[3])), 16)
        local code2 = tonumber(string_sub(rs, range(ri, rj, action[4], action[5])), 16)
        rs = encode_utf8(decode_surrogate_pair(code1, code2))
        ri = 1
        rj = #rs
      elseif code == 15 then -- add integer
        rv = rv + action[2]
      end
    end

    if not skip then
      if not position_mark then
        position_mark = init
      end
      local node = {
        [0] = lexer.accept_to_symbol[accept];
        p = position_start;
        i = position_mark;
        j = position - 1;
        rs = rs;
        ri = ri;
        rj = rj;
      }
      terminal_nodes[#terminal_nodes + 1] = node
      position_start = position
      position_mark = nil
    end
    init = position
  end

  if #stack == 1 then
    if not position_mark then
      position_mark = init
    end
    terminal_nodes[#terminal_nodes + 1] = {
      [0] = 1; -- marker end
      p = position_start;
      i = position_mark;
      j = n;
      rs = s;
      ri = init;
      rj = n;
    }
    return terminal_nodes
  else
    return nil, "lexer error", init
  end
end
end)()
local metatable = { __call = execute }
local _ = {}
_[1] = {1}
_[2] = {_[1]}
_[3] = {}
_[4] = {9,2,-2}
_[5] = {_[4]}
_[6] = {9,4,-3}
_[7] = {_[6]}
_[8] = {9,3,-3}
_[9] = {_[8]}
_[10] = {4,2}
_[11] = {8}
_[12] = {_[1],_[10],_[11]}
_[13] = {4,3}
_[14] = {_[1],_[13],_[11]}
_[15] = {9,2,-3}
_[16] = {12,"]","]"}
_[17] = {7}
_[18] = {4,4}
_[19] = {_[15],_[16],_[17],_[1],_[18],_[11]}
_[20] = {_[4],_[16],_[17],_[1],_[18],_[11]}
_[21] = {9,4,-2}
_[22] = {4,5}
_[23] = {_[21],_[16],_[17],_[1],_[22]}
_[24] = {_[2],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[3],_[5],_[5],_[7],_[9],_[12],_[14],_[19],_[20],_[3],_[3],_[3],_[3],_[2],_[23],_[2]}
_[25] = {nil,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,58,58,58,nil,nil,nil,nil,59,59,60,60}
_[26] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,58,59,60,60,61,61,62,63,64,64,65,65,66,66,67,68,68,69,69,70,70,71,72}
_[27] = {[120]=138,[121]=139,[123]=146,[125]=145,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[28] = {[1]=1,[120]=138,[121]=139,[123]=146,[125]=145,[137]=1,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[29] = {[1]=1,[120]=138,[121]=139,[123]=146,[124]=122,[125]=123,[137]=1,[138]=138,[139]=139,[140]=136,[141]=136,[142]=136,[143]=136,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[30] = {[120]=114,[121]=139,[123]=146,[125]=145,[137]=120,[138]=114,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[31] = {[120]=138,[121]=139,[123]=146,[125]=145,[137]=30,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[32] = {[120]=138,[121]=139,[123]=146,[125]=145,[137]=28,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[33] = {[120]=138,[121]=139,[123]=146,[125]=145,[137]=31,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[34] = {[120]=138,[121]=115,[123]=146,[125]=145,[137]=121,[138]=138,[139]=115,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[35] = {[120]=138,[121]=139,[123]=146,[125]=145,[137]=44,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[36] = {[120]=138,[121]=139,[123]=146,[125]=145,[137]=45,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[37] = {[120]=138,[121]=139,[123]=146,[125]=145,[137]=26,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[38] = {[120]=138,[121]=139,[123]=146,[125]=145,[137]=24,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[148]=149,[152]=153,[155]=145,[156]=146}
_[39] = {[120]=138,[121]=139,[123]=146,[125]=145,[137]=53,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[40] = {[25]=140,[120]=138,[121]=139,[123]=146,[125]=145,[137]=25,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[148]=149,[152]=153,[155]=145,[156]=146}
_[41] = {[54]=55,[55]=56,[120]=138,[121]=139,[123]=146,[125]=145,[126]=129,[127]=129,[128]=131,[137]=54,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[150]=151,[155]=145,[156]=146}
_[42] = {[27]=36,[120]=138,[121]=139,[123]=146,[125]=145,[137]=27,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[43] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,129,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,127,127,128,129,130,131,132,nil,nil,nil,nil,126,138,139,141,141,141,141,144,145,146,144,130,130,128,131,132,132,nil,145,146}
_[44] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,129,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,127,127,128,129,130,131,132,nil,nil,nil,nil,127,138,139,141,141,141,141,144,145,146,144,130,130,128,131,132,132,nil,145,146}
_[45] = {[52]=50,[120]=138,[121]=139,[123]=146,[125]=145,[137]=52,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[46] = {[120]=138,[121]=139,[123]=146,[125]=145,[137]=51,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[47] = {[41]=34,[120]=138,[121]=139,[123]=146,[125]=145,[137]=41,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[48] = {[32]=38,[41]=39,[42]=40,[43]=37,[48]=154,[120]=138,[121]=139,[123]=146,[125]=145,[137]=43,[138]=138,[139]=139,[140]=141,[141]=141,[142]=143,[143]=143,[144]=144,[145]=145,[146]=146,[147]=144,[154]=154,[155]=145,[156]=146}
_[49] = {[42]=35,[120]=138,[121]=139,[123]=146,[125]=145,[137]=42,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[50] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,128,nil,nil,131,nil,nil,nil,nil,nil,57,138,139,141,141,141,141,144,145,146,144,nil,nil,128,131,nil,nil,nil,145,146}
_[51] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,148,148,128,148,nil,131,nil,nil,nil,nil,nil,57,138,139,141,141,141,141,144,145,146,144,nil,nil,128,131,nil,nil,nil,145,146}
_[52] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,138,139,141,141,141,141,144,145,146,144,nil,nil,nil,nil,nil,nil,nil,145,146}
_[53] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,152,nil,nil,152,nil,nil,nil,nil,nil,57,138,139,141,141,141,141,144,145,146,144,nil,nil,nil,nil,nil,nil,nil,145,146}
_[54] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,150,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,138,139,141,141,141,141,144,145,146,144,nil,nil,nil,nil,nil,nil,nil,145,146}
_[55] = {[48]=125,[120]=138,[121]=139,[123]=146,[125]=145,[137]=48,[138]=138,[139]=139,[140]=142,[141]=141,[142]=144,[143]=135,[144]=144,[145]=145,[146]=146,[147]=144,[154]=124,[155]=145,[156]=146}
_[56] = {[123]=146,[125]=145,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[57] = {[116]=117,[118]=119,[120]=138,[121]=139,[123]=156,[125]=155,[133]=134,[137]=49,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=147,[145]=155,[146]=156,[147]=133,[155]=118,[156]=116}
_[58] = {[120]=138,[121]=139,[123]=146,[125]=145,[137]=29,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[59] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,94,57,57,68,57,57,57,104,57,108,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,128,nil,nil,131,nil,nil,nil,nil,nil,77,138,139,141,141,141,141,144,145,146,144,nil,nil,128,131,nil,nil,nil,145,146}
_[60] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,128,nil,nil,131,nil,nil,nil,nil,nil,61,138,139,141,141,141,141,144,145,146,144,nil,nil,128,131,nil,nil,nil,145,146}
_[61] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,62,57,57,57,57,57,57,57,57,57,57,57,85,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,128,nil,nil,131,nil,nil,nil,nil,nil,57,138,139,141,141,141,141,144,145,146,144,nil,nil,128,131,nil,nil,nil,145,146}
_[62] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,2,57,57,57,57,7,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,128,nil,nil,131,nil,nil,nil,nil,nil,95,138,139,141,141,141,141,144,145,146,144,nil,nil,128,131,nil,nil,nil,145,146}
_[63] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,64,57,57,57,57,57,57,78,57,57,57,57,87,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,110,57,57,57,57,57,57,5,57,57,8,57,57,57,57,57,57,57,57,57,57,57,21,57,23,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,148,148,128,148,nil,131,nil,nil,nil,nil,nil,79,138,139,141,141,141,141,144,145,146,144,nil,nil,128,131,nil,nil,nil,145,146}
_[64] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,6,57,57,57,57,57,12,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,128,nil,nil,131,nil,nil,nil,nil,nil,81,138,139,141,141,141,141,144,145,146,144,nil,nil,128,131,nil,nil,nil,145,146}
_[65] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,70,138,139,141,141,141,141,144,145,146,144,nil,nil,nil,nil,nil,nil,nil,145,146}
_[66] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,76,57,57,57,57,57,57,57,89,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,138,139,141,141,141,141,144,145,146,144,nil,nil,nil,nil,nil,nil,nil,145,146}
_[67] = {nil,57,57,57,97,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,83,57,57,57,57,57,57,92,57,57,57,57,57,57,57,57,57,105,57,57,57,57,112,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,103,138,139,141,141,141,141,144,145,146,144,nil,nil,nil,nil,nil,nil,nil,145,146}
_[68] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,3,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,138,139,141,141,141,141,144,145,146,144,nil,nil,nil,nil,nil,nil,nil,145,146}
_[69] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,82,57,57,57,57,57,57,57,57,57,57,80,57,57,57,57,57,57,57,57,57,57,57,57,113,57,57,57,57,57,57,57,57,57,57,57,14,15,57,57,57,57,57,57,22,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,63,138,139,141,141,141,141,144,145,146,144,nil,nil,nil,nil,nil,nil,nil,145,146}
_[70] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,59,57,57,57,57,57,57,75,57,57,57,57,57,57,57,57,57,57,57,93,57,98,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,10,57,13,57,57,57,57,57,19,20,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,86,138,139,141,141,141,141,144,145,146,144,nil,nil,nil,nil,nil,nil,nil,145,146}
_[71] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,71,57,57,57,57,57,57,84,57,57,57,57,57,57,57,57,57,57,100,57,101,57,57,106,57,57,57,57,57,57,57,57,4,57,57,57,57,57,57,11,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,107,138,139,141,141,141,141,144,145,146,144,nil,nil,nil,nil,nil,nil,nil,145,146}
_[72] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,72,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,152,nil,nil,152,nil,nil,nil,nil,nil,57,138,139,141,141,141,141,144,145,146,144,nil,nil,nil,nil,nil,nil,nil,145,146}
_[73] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,67,57,57,57,57,57,57,57,57,57,57,57,57,90,57,57,57,57,57,57,57,57,57,57,57,57,57,109,57,57,57,57,57,57,57,57,57,57,57,9,57,57,57,57,57,57,17,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,60,138,139,141,141,141,141,144,145,146,144,nil,nil,nil,nil,nil,nil,nil,145,146}
_[74] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,96,57,99,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,138,139,141,141,141,141,144,145,146,144,nil,nil,nil,nil,nil,nil,nil,145,146}
_[75] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,69,57,73,57,57,57,57,57,57,57,57,57,57,91,57,57,57,57,57,57,57,57,102,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,16,57,18,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,74,138,139,141,141,141,141,144,145,146,144,nil,nil,nil,nil,nil,nil,nil,145,146}
_[76] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,88,57,57,57,57,57,57,57,58,57,57,57,57,57,57,57,57,111,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,65,138,139,141,141,141,141,144,145,146,144,nil,nil,nil,nil,nil,nil,nil,145,146}
_[77] = {nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,nil,nil,nil,nil,nil,nil,138,139,nil,146,nil,145,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,66,138,139,141,141,141,141,144,145,146,144,nil,nil,nil,nil,nil,nil,nil,145,146}
_[78] = {[120]=138,[121]=139,[123]=146,[125]=145,[137]=46,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[79] = {[120]=138,[121]=139,[123]=146,[125]=145,[137]=33,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[80] = {[120]=138,[121]=139,[123]=146,[125]=145,[137]=47,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[81] = {[120]=138,[121]=139,[123]=146,[125]=145,[137]=32,[138]=138,[139]=139,[140]=141,[141]=141,[142]=141,[143]=141,[144]=144,[145]=145,[146]=146,[147]=144,[155]=145,[156]=146}
_[82] = {_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[28],_[29],_[28],_[28],_[28],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[28],_[27],_[30],_[31],_[27],_[32],_[33],_[34],_[35],_[36],_[37],_[38],_[39],_[40],_[41],_[42],_[43],_[44],_[44],_[44],_[44],_[44],_[44],_[44],_[44],_[44],_[45],_[46],_[47],_[48],_[49],_[27],_[27],_[50],_[50],_[50],_[50],_[51],_[50],_[52],_[52],_[52],_[52],_[52],_[52],_[52],_[52],_[52],_[53],_[52],_[52],_[52],_[52],_[52],_[52],_[52],_[54],_[52],_[52],_[55],_[56],_[57],_[58],_[52],_[27],_[59],_[60],_[61],_[62],_[63],_[64],_[65],_[66],_[67],_[52],_[68],_[69],_[52],_[70],_[71],_[72],_[52],_[73],_[74],_[75],_[76],_[52],_[77],_[54],_[52],_[52],_[78],_[79],_[80],_[81],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],_[27],[0]=_[27]}
_[83] = {accept_states=_[26],max_state=156,start_state=137,transitions=_[82]}
_[84] = {accept_to_actions=_[24],accept_to_symbol=_[25],automaton=_[83]}
_[85] = {6,"\a"}
_[86] = {2}
_[87] = {_[85],_[86]}
_[88] = {6,"\b"}
_[89] = {_[88],_[86]}
_[90] = {6,"\f"}
_[91] = {_[90],_[86]}
_[92] = {6,"\n"}
_[93] = {_[92],_[86]}
_[94] = {6,"\r"}
_[95] = {_[94],_[86]}
_[96] = {6,"\t"}
_[97] = {_[96],_[86]}
_[98] = {6,"\v"}
_[99] = {_[98],_[86]}
_[100] = {6,"\\"}
_[101] = {_[100],_[86]}
_[102] = {6,"\""}
_[103] = {_[102],_[86]}
_[104] = {6,"'"}
_[105] = {_[104],_[86]}
_[106] = {9,2,-1}
_[107] = {10,10}
_[108] = {11}
_[109] = {_[106],_[107],_[108],_[86]}
_[110] = {13,4,-2}
_[111] = {_[110],_[86]}
_[112] = {_[86]}
_[113] = {3}
_[114] = {5}
_[115] = {_[113],_[114]}
_[116] = {_[87],_[89],_[91],_[93],_[95],_[97],_[99],_[101],_[103],_[105],_[2],_[109],_[111],_[112],_[115]}
_[117] = {[15]=58}
_[118] = {1,2,3,4,5,6,7,8,9,10,11,12,12,12,13,14,15}
_[119] = {[16]=16,[18]=16}
_[120] = {[11]=11,[16]=16,[18]=16}
_[121] = {[18]=17,[19]=9}
_[122] = {[16]=16,[18]=16,[19]=10}
_[123] = {[12]=13,[13]=14,[16]=16,[18]=16,[19]=12,[21]=22,[22]=22}
_[124] = {[16]=16,[18]=16,[21]=22,[22]=22}
_[125] = {[18]=19,[19]=8}
_[126] = {[16]=16,[18]=16,[19]=1,[21]=22,[22]=22}
_[127] = {[16]=16,[18]=16,[19]=2,[21]=22,[22]=22}
_[128] = {[16]=16,[18]=16,[19]=3,[21]=22,[22]=22}
_[129] = {[16]=16,[18]=16,[19]=4}
_[130] = {[16]=16,[18]=16,[19]=5}
_[131] = {[16]=16,[18]=16,[19]=6}
_[132] = {[16]=16,[18]=16,[19]=20}
_[133] = {[16]=16,[18]=16,[19]=7}
_[134] = {[16]=16,[18]=16,[19]=11}
_[135] = {[16]=16,[18]=16,[20]=21}
_[136] = {[16]=16,[18]=16,[22]=15}
_[137] = {_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[120],_[120],_[120],_[120],_[120],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[120],_[119],_[121],_[119],_[119],_[119],_[119],_[122],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[123],_[123],_[123],_[123],_[123],_[123],_[123],_[123],_[123],_[123],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[124],_[124],_[124],_[124],_[124],_[124],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[125],_[119],_[119],_[119],_[119],_[126],_[127],_[124],_[124],_[124],_[128],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[129],_[119],_[119],_[119],_[130],_[119],_[131],_[132],_[133],_[119],_[119],_[119],_[134],_[135],_[119],_[136],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],_[119],[0]=_[119]}
_[138] = {accept_states=_[118],max_state=22,start_state=18,transitions=_[137]}
_[139] = {accept_to_actions=_[116],accept_to_symbol=_[117],automaton=_[138]}
_[140] = {1,2,3,4,5,6,7,8,9,10,11,12,12,12,13,14}
_[141] = {[16]=16,[17]=16}
_[142] = {[11]=11,[16]=16,[17]=16}
_[143] = {[18]=9}
_[144] = {[16]=16,[17]=16,[18]=10}
_[145] = {[12]=13,[13]=14,[16]=16,[17]=16,[18]=12,[20]=21,[21]=21}
_[146] = {[16]=16,[17]=16,[20]=21,[21]=21}
_[147] = {[17]=18,[18]=8}
_[148] = {[16]=16,[17]=16,[18]=1,[20]=21,[21]=21}
_[149] = {[16]=16,[17]=16,[18]=2,[20]=21,[21]=21}
_[150] = {[16]=16,[17]=16,[18]=3,[20]=21,[21]=21}
_[151] = {[16]=16,[17]=16,[18]=4}
_[152] = {[16]=16,[17]=16,[18]=5}
_[153] = {[16]=16,[17]=16,[18]=6}
_[154] = {[16]=16,[17]=16,[18]=19}
_[155] = {[16]=16,[17]=16,[18]=7}
_[156] = {[16]=16,[17]=16,[18]=11}
_[157] = {[16]=16,[17]=16,[19]=20}
_[158] = {[16]=16,[17]=16,[21]=15}
_[159] = {_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[142],_[142],_[142],_[142],_[142],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[142],_[141],_[143],_[141],_[141],_[141],_[141],_[144],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[145],_[145],_[145],_[145],_[145],_[145],_[145],_[145],_[145],_[145],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[146],_[146],_[146],_[146],_[146],_[146],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[147],_[141],_[141],_[141],_[141],_[148],_[149],_[146],_[146],_[146],_[150],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[151],_[141],_[141],_[141],_[152],_[141],_[153],_[154],_[155],_[141],_[141],_[141],_[156],_[157],_[141],_[158],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],_[141],[0]=_[141]}
_[160] = {accept_states=_[140],max_state=21,start_state=17,transitions=_[159]}
_[161] = {accept_to_actions=_[116],accept_to_symbol=_[117],automaton=_[160]}
_[162] = {_[115],_[112]}
_[163] = {58}
_[164] = {accept_to_actions=_[162],accept_to_symbol=_[163]}
_[165] = {_[1],_[114]}
_[166] = {_[165],_[2]}
_[167] = {accept_to_actions=_[166],accept_to_symbol=_[3]}
_[168] = {_[84],_[139],_[161],_[164],_[167]}
local root = setmetatable(_[168], metatable)
return function() return root end
